@model ModuleEditViewModel
@{
    ViewData["Title"] = "Edit Module";
}

<div class="container my-4">
    <div class="row mb-4">
        <div class="col">
            <h1>Edit Module: @Model.Title</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Account" asp-action="Dashboard">Teacher Dashboard</a></li>
                    <li class="breadcrumb-item"><a asp-controller="Course" asp-action="Edit" asp-route-id="@Model.CourseId">Edit Course</a></li>
                    <li class="breadcrumb-item active">Edit Module</li>
                </ol>
            </nav>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Module Details</h5>
                </div>
                <div class="card-body">
                    <form asp-action="UpdateModule" method="post">
                        <input type="hidden" asp-for="ModuleId" />
                        <input type="hidden" asp-for="CourseId" />

                        <div class="mb-3">
                            <label asp-for="Title" class="form-label">Module Title</label>
                            <input asp-for="Title" class="form-control" required />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="5" required></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-primary">Update Module</button>
                        <a asp-action="Edit" asp-route-id="@Model.CourseId" class="btn btn-outline-secondary">Back to Course</a>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Module Contents</h5>
                    <div>
                        <div class="dropdown d-inline-block">
                            <button class="btn btn-sm btn-success dropdown-toggle" type="button" id="addContentDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-plus-circle"></i> Add Content
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="addContentDropdown">
                                <li><a class="dropdown-item" asp-controller="Course" asp-action="CreateContent" asp-route-moduleId="@Model.ModuleId">Add Content</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (!Model.Contents.Any())
                    {
                        <div class="alert alert-info">
                            This module has no content yet. Click "Add Content" to add video, text, or quiz content.
                        </div>
                    }
                    else
                    {
                        <div class="list-group" id="content-list">
                            @foreach (var content in Model.Contents.OrderBy(c => c.Order))
                            {
                                <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center"
                                     data-content-id="@content.Id">
                                    <div>
                                        <div class="d-flex align-items-center">
                                            @if (content is VideoContent)
                                            {
                                                <i class="bi bi-film me-2 text-primary"></i>
                                                <h6 class="mb-1">Video: @content.Title</h6>
                                            }
                                            else if (content is TextContent)
                                            {
                                                <i class="bi bi-file-text me-2 text-success"></i>
                                                <h6 class="mb-1">Text: @content.Title</h6>
                                            }
                                            else if (content is QuizContent)
                                            {
                                                <i class="bi bi-question-circle me-2 text-warning"></i>
                                                <h6 class="mb-1">Quiz: @content.Title</h6>
                                            }
                                        </div>
                                        <p class="mb-1 text-muted small">@content.ShortDescription</p>
                                    </div>
                                    <div class="d-flex">
                                        <form asp-action="DeleteContent" method="post" onsubmit="return confirm('Are you sure you want to delete this content?');">
                                            <input type="hidden" name="contentId" value="@content.Id" />
                                            <input type="hidden" name="moduleId" value="@Model.ModuleId" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Enable drag and drop reordering of content using SortableJS
        document.addEventListener('DOMContentLoaded', function() {
            const contentList = document.getElementById('content-list');
            if (contentList) {
                new Sortable(contentList, {
                    animation: 150,
                    ghostClass: 'bg-light',
                    onEnd: function() {
                        // Get the new content order
                        const contentIds = Array.from(contentList.children).map(item =>
                            parseInt(item.getAttribute('data-content-id'))
                        );

                        // Send the new order to the server
                        fetch('@Url.Action("ReorderContents", "Course")', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify({ contentIds: contentIds })
                        })
                        .then(response => {
                            if (!response.ok) {
                                console.error('Failed to reorder contents');
                            }
                        })
                        .catch(error => {
                            console.error('Error reordering contents:', error);
                        });
                    }
                });
            }
        });
    </script>
}