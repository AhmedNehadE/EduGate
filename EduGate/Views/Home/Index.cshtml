@model HomePageViewModel

@{
    ViewData["Title"] = "Home Page";
}

<!-- Header Section -->
<div class="text-center mb-5">
    <h1 class="display-4">Welcome</h1>
    <p>Learn and grow with EduGate. Explore our courses and enhance your skills!</p>
</div>

<!-- Most Viewed Courses Section -->
<section id="most-viewed-courses" class="mb-5">
    <h2 class="text-center">Most Popular Courses</h2>
    <div class="row justify-content-center">
        @foreach (var course in Model.MostViewedCourses)
        {
            <div class="col-md-4 mb-4">
                <a href="@Url.Action("Details", "Course", new { id = course.Id })" class="text-decoration-none">
                    <div class="card h-100 shadow-sm course-card">
                        <img src="@Url.Content(course.ImageUrl)"
                             class="card-img-top"
                             alt="Course Image"
                             style="height: 200px; object-fit: cover;">
                        <div class="card-body d-flex flex-column justify-content-between">
                            <h5 class="card-title">@course.Title</h5>
                            <p class="card-text">Views: @course.Views</p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</section>

<!-- Course Categories Tabs Section -->
<section class="container my-5">
    <!-- Tab Navigation -->
    <ul class="nav nav-tabs" id="categoryTabs" role="tablist">
        @for (int i = 0; i < Model.CourseCategories.Count; i++)
        {
            var category = Model.CourseCategories[i];
            string categoryId = "category-" + category.Name.Replace(" ", "-").ToLower();

            <li class="nav-item" role="presentation">
                <button class="nav-link @(i == 0 ? "active" : "")"
                        id="@categoryId-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#@categoryId"
                        type="button"
                        role="tab"
                        aria-controls="@categoryId"
                        aria-selected="@(i == 0 ? "true" : "false")"
                        style="background-color: @(i == 0 ? "#023047" : "#FFB703"); color: @(i == 0 ? "#FFB703" : "#023047"); border: none; margin-right: 5px; border-radius: 5px 5px 0 0;">
                    @category.Name
                </button>
            </li>
        }
    </ul>

    <!-- Tab Content -->
    <div class="tab-content mt-4" id="categoryTabsContent">
        @for (int i = 0; i < Model.CourseCategories.Count; i++)
        {
            var category = Model.CourseCategories[i];
            string categoryId = "category-" + category.Name.Replace(" ", "-").ToLower();
            string carouselId = "carousel-" + categoryId;
            var hasManyCourses = category.Courses.Count > 4;

            <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="@categoryId" role="tabpanel" aria-labelledby="@categoryId-tab">
                @if (category.Courses.Any())
                {
                    <div class="position-relative">
                        <div id="@carouselId" class="carousel slide" data-bs-ride="false" data-bs-interval="false">
                            <div class="carousel-inner">
                                @for (int j = 0; j < Math.Ceiling((double)category.Courses.Count / 4); j++)
                                {
                                    var coursesSlice = category.Courses.Skip(j * 4).Take(4).ToList();
                                    <div class="carousel-item @(j == 0 ? "active" : "")">
                                        <div class="row">
                                            @foreach (var course in coursesSlice)
                                            {
                                                <div class="col-md-3 mb-4">
                                                    <a href="@Url.Action("Details", "Course", new { id = course.Id })" class="text-decoration-none">
                                                        <div class="card h-100 course-card">
                                                            <img src="@course.ImageUrl" class="card-img-top" alt="Course Image" style="height: 180px; object-fit: cover;">
                                                            <div class="card-body">
                                                                <h5 class="card-title">@course.Title</h5>
                                                                <p class="card-text">Views: @course.Views</p>
                                                            </div>
                                                        </div>
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>

                            @if (hasManyCourses)
                            {
                                <!-- Carousel Arrows -->
                                <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev" style="top: 35%; left: -40px; width: auto; background-color: rgba(0,0,0,0.3); border-radius: 50%; padding: 10px; position: absolute;">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next" style="top: 35%; right: -40px; width: auto; background-color: rgba(0,0,0,0.3); border-radius: 50%; padding: 10px; position: absolute;">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-center text-muted py-4">
                        <p>No courses available in this category.</p>
                    </div>
                }
            </div>
        }
    </div>
</section>


<!-- Motivational Quotes Section -->
<section id="motivational-quotes" class="bg-light py-5">
    <h2 class="text-center mb-5">Quotes to Inspire Your Learning</h2> <!-- Increased space below the title -->
    <div class="row justify-content-center pt-3">
        <div class="col-md-6 mb-4">
            <blockquote class="blockquote text-center">
                <p class="mb-0">"The only way to do great work is to love what you do."</p>
                <footer class="blockquote-footer mt-3">Steve Jobs</footer>
            </blockquote>
        </div>
        <div class="col-md-6 mb-4">
            <blockquote class="blockquote text-center">
                <p class="mb-0">"Learning never exhausts the mind." </p>
                <footer class="blockquote-footer mt-3">Leonardo da Vinci</footer>
            </blockquote>
        </div>
        <div class="col-md-6 mb-4">
            <blockquote class="blockquote text-center">
                <p class="mb-0">"The best way to predict the future is to create it."</p>
                <footer class="blockquote-footer mt-3">Abraham Lincoln</footer>
            </blockquote>
        </div>
        <div class="col-md-6 mb-4">
            <blockquote class="blockquote text-center">
                <p class="mb-0">"Success is the sum of small efforts, repeated day in and day out."</p>
                <footer class="blockquote-footer mt-3">Robert Collier</footer>
            </blockquote>
        </div>
    </div>
</section>

<!-- CSS for course cards -->
<style>
    .course-card {
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .course-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.2) !important;
            cursor: pointer;
        }
</style>

<!-- Javascript to make Tabs work (Bootstrap 5) -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get all tab buttons
        const tabButtons = document.querySelectorAll('#categoryTabs .nav-link');

        // Apply the initial colors to match the bootstrap active state
        const activeTab = document.querySelector('#categoryTabs .nav-link.active');
        if (activeTab) {
            activeTab.style.backgroundColor = '#023047';
            activeTab.style.color = '#FFB703';
        }

        // Function to initialize carousels
        function initCarousel(carouselId) {
            const carouselElement = document.getElementById(carouselId);
            if (carouselElement) {
                // Check for existing carousel instance and dispose it
                const existingCarousel = bootstrap.Carousel.getInstance(carouselElement);
                if (existingCarousel) {
                    existingCarousel.dispose();
                }

                // Create new carousel instance
                new bootstrap.Carousel(carouselElement, {
                    interval: false,
                    wrap: true
                });
            }
        }

        // Initialize all visible carousels on page load
        document.querySelectorAll('.tab-pane.active .carousel').forEach(carousel => {
            initCarousel(carousel.id);
        });

        // Clean implementation of tab click handling
        tabButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Update colors for all tabs
                tabButtons.forEach(btn => {
                    btn.style.backgroundColor = '#FFB703';
                    btn.style.color = '#023047';
                    btn.classList.remove('active');
                    btn.setAttribute('aria-selected', 'false');
                });

                // Set active state for this tab
                this.style.backgroundColor = '#023047';
                this.style.color = '#FFB703';
                this.classList.add('active');
                this.setAttribute('aria-selected', 'true');

                // Get target pane
                const target = document.querySelector(this.getAttribute('data-bs-target'));

                // Hide all tab panes
                document.querySelectorAll('.tab-pane').forEach(pane => {
                    pane.classList.remove('show', 'active');
                });

                // Show the target pane
                if (target) {
                    target.classList.add('show', 'active');

                    // Initialize carousel in this tab
                    const carousels = target.querySelectorAll('.carousel');
                    carousels.forEach(carousel => {
                        initCarousel(carousel.id);
                    });
                }
            });
        });
    });
</script>